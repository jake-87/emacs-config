(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)

(global-unset-key (kbd "C-z"))
(global-set-key (kbd "C-p") 'preview-document)
(global-set-key (kbd "C->") 'tab-next)
(global-set-key (kbd "C-<") 'tab-previous)

(add-hook 'vterm-mode-hook (lambda () (text-scale-decrease 2)))
(set-face-attribute 'mode-line nil :height 60)
(require 'ef-themes)
(load-theme 'ef-cherie t)
(show-paren-mode t)
(setq show-paren-style 'expression)
; personal config
(menu-bar-mode -1)
(toggle-scroll-bar -1)
(tool-bar-mode -1)
(setq mount-wheel-progressive-speed nil)
(setq mount-wheel-follow-mouse 't)
(setq auto-save-default nil)
;; scroll one line at a time (less "jumpy" than defaults)

(setq mouse-wheel-scroll-amount '(1 ((shift) . 1))) ;; one line at a time

(setq mouse-wheel-progressive-speed nil) ;; don't accelerate scrolling

(setq mouse-wheel-follow-mouse 't) ;; scroll window under mouse

(setq scroll-step 1) ;; keyboard scroll one line at a time

;disable backup
(setq backup-inhibited t)
;disable auto save
(setq auto-save-default nil)

(add-hook 'prog-mode-hook 'display-line-numbers-mode)
(add-hook 'prog-mode-hook #'display-fill-column-indicator-mode)
(use-package lsp-ui
  :custom
  (lsp-ui-sideline-enable t)
  (lsp-ui-sideline-show-diagnostics t)
  (lsp-ui-sideline-show-hover t)
  (lsp-ui-sideline-delay 0.0))
(use-package lsp-mode
  :hook (c-mode . lsp))
(setq-default abbrev-mode t)
(add-hook 'after-init-hook 'global-color-identifiers-mode)
(require 'rust-mode)
(add-hook 'rust-mode-hook #'lsp)
(require 'rainbow-delimiters)
(add-hook 'prog-mode-hook 'rainbow-delimiters-mode)
(defun my-symbols-alist ()
  (setq prettify-symbols-alist
	(append prettify-symbols-alist
		(prettify-utils-generate
		 ("lambda" "λ")
		 ("forall" "∀")
		 ("exists" "∃")
		 ("fun" "λ")
     ("function" "\\λ")
		 ("->" "→")
		 ("=>" "⇒")
		 ("~>" "⊸")
		 (">=" "≥")
		 ("<=" "≤")
		 ("tfun" "Λ")
     ("Proof." "∵ ")
     ("Qed." "□")))))
(setq global-prettify-symbols-mode t)
(add-hook 'prog-mode-hook #'(lambda () (progn (my-symbols-alist) (prettify-symbols-mode t))))
(require 'org)

(add-hook 'org-mode-hook (lambda () (org-superstar-mode 1)))

(with-eval-after-load 'org-superstar
  (set-face-attribute 'org-superstar-item nil :height 1.2)
  (set-face-attribute 'org-superstar-header-bullet nil :height 1.2)
  (set-face-attribute 'org-superstar-leading nil :height 1.3))
;; Set different bullets, with one getting a terminal fallback.
(setq org-superstar-headline-bullets-list
      '("✯" "◇" "◈" "▷" "▶" "⇥" "⌲"))

;; Stop cycling bullets to emphasize hierarchy of headlines.
(setq org-superstar-cycle-headline-bullets nil)
;; Hide away leading stars on terminal.
(setq org-superstar-leading-bullet ?\s)

;; set the ... thing on collapse
(setq org-ellipsis " ↴")




(setq org-n-level-faces 4)

;; hide the #+title:
(setq org-hidden-keywords '(title))
;; make latex preview bigger
(setq org-format-latex-options (plist-put org-format-latex-options :scale 3.5))

(keymap-global-set "C-x C-p" 'org-latex-preview)

(require 'org-fragtog)
(add-hook 'org-mode-hook 'org-fragtog-mode)

(require 'org-appear)
(add-hook 'org-mode-hook 'org-appear-mode)
(require 'org-fragtog)
(add-hook 'org-mode-hook 'org-fragtog-mode)

(require 'org-appear)
(add-hook 'org-mode-hook 'org-appear-mode)
(tab-bar-mode)
